apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: magento-cron
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 100
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: {{ .Chart.Name }}-cron
              image: magento2-monolith:dev
              args:
                - /usr/local/bin/php
                - -f
                - {{.Values.global.monolith.volumeHostPath}}/default/bin/magento
                - cron:run
              volumeMounts:
                - name: code
                  mountPath: {{.Values.global.monolith.volumeHostPath}}
              env:
                - name: DEVBOX_ROOT
                  value: {{.Values.global.monolith.volumeHostPath}}
                - name: COMPOSER_HOME
                  value: {{.Values.global.monolith.volumeHostPath}}/.composer
                - name: DEVBOX_ROOT_HOST
                  value: {{.Values.global.monolith.volumeHostPath}}
                - name: IS_WINDOWS_HOST
                  value: "0"
              readinessProbe:
                exec:
                  command:
                    - test
                    - -f
                    - {{.Values.global.monolith.volumeHostPath}}/magento/bin/magento
                timeoutSeconds: 2
                periodSeconds: 30
                failureThreshold: 100
                initialDelaySeconds: 15
          volumes:
            - name: code
            {{- if .Values.global.persistence.nfs.enabled }}
              persistentVolumeClaim:
                claimName: {{ include "magento.fullname" . }}-claim
            {{- else }}
              hostPath:
                path: {{.Values.global.monolith.volumeHostPath}}
            {{- end }}
          restartPolicy: OnFailure
{{- if .Values.global.monolith.cron.fullCron }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: magento-updater-cron
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 100
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: {{ .Chart.Name }}-cron
              image: magento2-monolith:dev
              args:
                - /usr/local/bin/php
                - -f
                - {{.Values.global.monolith.volumeHostPath}}/default/update/cron.php
              volumeMounts:
                - name: code
                  mountPath: {{.Values.global.monolith.volumeHostPath}}
              env:
                - name: DEVBOX_ROOT
                  value: {{.Values.global.monolith.volumeHostPath}}
                - name: COMPOSER_HOME
                  value: {{.Values.global.monolith.volumeHostPath}}/.composer
                - name: DEVBOX_ROOT_HOST
                  value: {{.Values.global.monolith.volumeHostPath}}
                - name: IS_WINDOWS_HOST
                  value: "0"
              readinessProbe:
                exec:
                  command:
                    - test
                    - -f
                    - {{.Values.global.monolith.volumeHostPath}}/magento/update/cron.php
                timeoutSeconds: 2
                periodSeconds: 30
                failureThreshold: 100
                initialDelaySeconds: 15
          volumes:
            - name: code
            {{- if .Values.global.persistence.nfs.enabled }}
              persistentVolumeClaim:
                claimName: {{ include "magento.fullname" . }}-claim
            {{- else }}
              hostPath:
                path: {{.Values.global.monolith.volumeHostPath}}
            {{- end }}
          restartPolicy: OnFailure
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: magento-setup-cron
spec:
  schedule: "* * * * *"
  concurrencyPolicy: Forbid
  startingDeadlineSeconds: 100
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: {{ .Chart.Name }}-cron
              image: magento2-monolith:dev
              args:
                - /usr/local/bin/php
                - -f
                - {{.Values.global.monolith.volumeHostPath}}/default/bin/magento
                - setup:cron:run
              volumeMounts:
                - name: code
                  mountPath: {{.Values.global.monolith.volumeHostPath}}
              env:
                - name: DEVBOX_ROOT
                  value: {{.Values.global.monolith.volumeHostPath}}
                - name: COMPOSER_HOME
                  value: {{.Values.global.monolith.volumeHostPath}}/.composer
                - name: DEVBOX_ROOT_HOST
                  value: {{.Values.global.monolith.volumeHostPath}}
                - name: IS_WINDOWS_HOST
                  value: "0"
              readinessProbe:
                exec:
                  command:
                    - test
                    - -f
                    - {{.Values.global.monolith.volumeHostPath}}/default/bin/magento
                timeoutSeconds: 2
                periodSeconds: 30
                failureThreshold: 100
                initialDelaySeconds: 15
          volumes:
            - name: code
            {{- if .Values.global.persistence.nfs.enabled }}
              persistentVolumeClaim:
                claimName: {{ include "magento.fullname" . }}-claim
            {{- else }}
              hostPath:
                path: {{.Values.global.monolith.volumeHostPath}}
            {{- end }}
          restartPolicy: OnFailure
{{- end }}
